```{r}
source("_setup.R")
```

# Materiales y métodos {#sec-metodo}

En este capítulo se describen los ficheros de datos suministrados, se explica la tarea de preprocesado realizada  sobre ellos y las variables que se han utilizado en el modelado estadístico.

## Ficheros suministrados

Se dispuso de los siguientes ficheros `csv`:

* Fichero `grade` contiene el identificador de estudiante y el grupo al que pertenece (campo `cohort`), ofuscado con SHA512 para no conocer la identidad real del estudiante y con CRC32b para no conocer si el grupo es el que el vio primero el vídeo bien subtitulado.
* Los ficheros `test1` y `test2` son las repuestas a las escalas de Likert sobre la calidad del subtitulado del primer y del segundo vídeo realizado por cada grupo respectivamente.

En la @tbl-likert-levels se muestran los 5 niveles de cada uno de los ítems de la escala de Likert utilizados para valorar el subtitulado
^[En la codificación original los valores asignados a cada respuesta eran diferentes: la opción "No sé / No contesto" se codificó con 5 y las demás opciones con una unidad menos que la mostrada. En este trabajo se ha hecho una rotación para asignar valores más usuales en la literatura científica sobre el tema.]. En la @tbl-likert-scale se muestran los 18 ítems de la escala de Likert que se propuso a los alumnos para que evaluaran cada uno de los vídeos.


```{r}
#| label: tbl-likert-levels
#| tbl-cap: Niveles de los ítems de la escala de Likert.
data.frame(`values` = 0:5, `levels` = response_labels) %>%
    gt() %>%
    as_raw_html()
```


```{r}
#| label: tbl-likert-scale
#| tbl-cap: Ítems de la escala de Likert.
tibble(Item = levels(df_all$Question), Texto = levels(df_all$Question_l)) %>%
    arrange(Item) %>%
    gt()
```

## Preprocesado {#sec-preprocesado}

```{r}
# Leemos el tibble preprocesado
test_all_df <- read_csv("./data/preprocess/test_all.csv", show_col_types = FALSE)

sex <- df_all %>%
    group_by(Subject) %>%
    slice_head(n = 1) %>%
    xtabs(data = ., ~gender, addNA = T)

```


Los datos personales de los estudiantes se suministraron anonimizados para evitar conocer su identidad. De acuerdo con nuestro compromiso ético, del estudio se han eliminado `r no_want_users` estudiantes que, a pesar de haber realizado la actividad, no dieron su consentimiento para que sus datos se utilizaran en estudios científicos. Tras este proceso, se dispone de `r test_all_df %>% nrow()` cuestionarios correspondientes a `r n_users` alumnos. Hay `r n_users -  n_distinct(df_all$Subject)` estudiantes que sólo realizaron el primero de los test. Como la muestra es suficientemente amplia, se ha decidido eliminar estos test quedando `r  n_distinct(df_all$Subject)` estudiantes participantes. De estos, `r sex["femenino"]` manifestaron tener sexo femenino, `r sex["masculino"]` masculino y el resto (`r sex[3]`) prefirieron no suministrar esta información. Se constata que hay un claro sesgo hacia el sexo femenino entre los participantes en la actividad de subtitulado.

En esta sección se describen las transformaciones realizadas con los ficheros suministrados:

* Se leyó el fichero `grade`. El número de fila con el que el usuario aparece en el fichero se utilizó como identificador del usuario para mantener la trazabilidad y comprobar que las transformaciones realizadas son correctas.

* Se eliminaron los datos de los estudiantes que, aun habiendo realizado la actividad, no dieron su consentimiento para participar en el estudio.

* El valor del campo `cohort`, que se indica el valor anonimizado para el grupo, se sustituyó por una letra, $A$ o $B$. En el momento en que se realizó este proceso se desconocía qué vídeo vio primero cada cohorte.

* Se leyeron los ficheros de test y se procesaron. Se utilizó el nombre del fichero (`test1` o `test2`) para saber de qué vídeo se estaba respondiendo el test
^[Se reitera que en el momento de realizar este proceso se desconocía si el vídeo es el correctamente subtitulado o el otro. La única información que se almacenó es si se estaba respondiendo al vídeo que se vio primero.].

* Se seleccionaron los ítems que contienen las respuestas y se renombraron para que fuera más fácil saber de qué ítem se trataba
^[En los ficheros suministrados la respuesta a cada ítem ocupaba varios campos. Se seleccionó en cada ñitem el que contiene el valor de la respuesta y se convirtió a numérico.]. Se convirtió el campo `LastTry`, que contiene la fecha y hora de realización del test, a formato fecha y hora.

* Se realizaron algunas comprobaciones como la ausencia de valores nulos en las variables más relevantes y la no existencia de inconsistencias o errores de procesado.

* Se eliminaron los comentarios y se grabaron en fichero aparte para que no revelaran información que habría podido descubrir el tipo de subtitulado que piensa que estaba evaluando el estudiante.

* Se renombraron las variables (ver @tbl-variables).

* Se eliminaron del estudio los usuarios que solo han realizado uno de los test.

* Se transformaron las variables que lo requirieron en factores. El ítem 18 se fijó como referencia en el factor `Question` ya que es una valoración general del subtitulado.

* Se rotaron los valores de respuesta para que "No sé / No contesto" tenga valor 0 y el resto de 1 a 5 desde "Muy en desacuerdo", 1, hasta "Muy de acuerdo", 5.

* Se crearon los factores `Level` con los niveles `negativo`, `neutral` y `positivo` dependiendo de si la respuesta es 1 ó 2, 3, 4 ó 5 respectivamente e `Improve` con valores 0 ó 1, dependiendo de si la respuesta en el test $A$ es mejor (1) o igual o peor (0) que la del $B$ para cada ítem y estudiante.
  
* Se transformó el `dataframe` de formato ancho a largo. Los ficheros de respuestas originales se suministraron en formato ancho. Es decir, que cada fila es un test que contiene 18 columnas para las respuestas a cada ítem. Los nombres de las columnas son $Q01$, $Q02$, ..., $Q18$ y tienen valores de 0 a 5 con las respuestas. La mayoría de los paquetes de R utilizados requieren que los datos estén en formato largo. Esto que quiere decir que cada fila tendrá una única respuesta por lo que habrá únicamente dos columnas, $Question$ y $Response$. En la primera se almacena el identificador del ítem ($Q01$, $Q02$, ..., $Q18$) y en la segunda el valor de la respuesta (de 0 a 5). De esta forma, un test pasó de ocupar una fila y 18 columnas en el formato ancho a 18 filas y dos columnas en el largo.

## Variables utilizadas

En la @tbl-variables se describen las características más relevantes de las principales variables que se utilizarán en el modelado y en el análisis estadístico. La variable dependiente o respuesta en todos los modelos es `Response` y contiene las respuestas a todos los ítems. La variable explicativa principal es el factor `Treat` y permite diferenciar los dos niveles de subtitulado. Los factores `Period` y `Seq` sirven para evaluar la presencia de efectos periodo y secuencia respectivamente. Por último, los factores `Subject` y `Question` son variables explicativas que se tratan como efectos aleatorios en el modelado multinivel.

\footnotesize

```{r}
#| label: tbl-variables
#| tbl-cap: Descripción de las variables más importantes.
tibble(
    Nombre = c("Response", "Level", "Improve", "Treat", "Period", "Seq", "Subject", "Question"),
    `Descripción` = c(
        "Respuesta a los ítems del test.",
        "Valoración de la respuesta.",
        "Mejor respuesta en test A que en B.",
        "Subtítulos",
        "Periodo", "Secuencia de aplicación de los tratamientos.", "Identificación del estudiante", "Número del ítem"
    ),
    Tipo = c("Factor ordenado", "Factor ordenado", "Factor", "Factor", "Factor", "Factor", "Factor", "Factor"),
    Valores = c("De 0 a 5", "Negativo, Neutral, Positivo", "1 ó 0", "A o B", "1 ó 2", "AB o BA", "Numérico", "Q01, Q02, ..., Q18")
) %>%
    gt() %>%
    gt_theme_guardian() %>%
    tab_footnote(
        footnote = "Positivo cuando Response sea 4 ó 5, Negativo cuando sea 1 ó 2 y Neutral para 3.",
        locations = cells_body(
            columns = Valores,
            rows = Nombre == "Level"
        )
    ) %>%
    tab_footnote(
        footnote = "1 para el primer vídeo visto y 2 el segundo.",
        locations = cells_body(
            columns = Valores,
            rows = Nombre == "Period"
        )
    )
```
\normalsize

## `Dataframes` utilizados

Se van a usar dos `dataframes`:

* `df_clean` contiene las respuestas con valor de 1 a 5. Se han eliminado las de valor 0 ("No sé / No contesto"). Se utiliza cuando se traten las respuestas como ordinales y, por lo tanto, como ordenadas.
* `df_all` incluye todas las respuestas de 0 a 5. Se utiliza cuando se traten las respuestas como categóricas y no ordenadas.

La estructura de estos `dataframes` es la siguiente:

```{r}
str(df_clean %>% dplyr::select(Seq, Period, Treat, Subject, Question, Response, Level), strict.width = "cut")
``` 

En la @tbl-df_clean se muestran algunos ejemplos datos.

```{r}
#| label: tbl-df_clean
#| tbl-cap: Muestra del dataframe preparado para el modelado estadístico en formato largo.
df_clean %>%
    dplyr::select(Seq, Period, Treat, Subject, Question, Response, Level) %>%
    filter(Subject %in% c(33, 35) & Question %in% c("Q18", "Q01", "Q02")) %>%
    arrange(desc(Subject), Question, Period) %>%
    gt()

``` 
