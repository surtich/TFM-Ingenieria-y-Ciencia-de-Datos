```{r}
source("_setup.R")
```

```{r}
# Leemos el tibble preprocesado
test_all_df <- read_csv("./data/preprocess/test_all.csv", show_col_types = FALSE)

test_all_df <- test_all_df %>% mutate(Seq = ifelse(Group == "A", "AB", "BA"))

# Nos quedamos con los estudiantes que sólo han hecho un test
unique_tests_df <- test_all_df %>%
    group_by(User) %>%
    mutate(Rows = n()) %>%
    filter(Rows == 1) %>%
    ungroup()


unique_count <- unique_tests_df %>% count(Seq)

# Eliminamos aquellos estudiantes que no han hecho uno de los test
test_all_df <- test_all_df %>%
    group_by(User) %>%
    mutate(Rows = n()) %>%
    filter(Rows > 1) %>%
    ungroup()
```



# Modelado estadístico {#sec-modelado}


## Análisis exploratorio {#sec-eda}


Como se explica en la @tbl-variables, al subtitulado se le denomina tratamiento y a sus niveles (correcto e incorrecto) se les ha llamado $A$ y $B$ sin hacer ninguna conjetura de cual de los dos es el subtitulado correcto. El grupo con secuencia $AB$ será el que primero vio el vídeo con subtitulado $A$ y luego el $B$. Análogamente, el grupo con secuencia $BA$ vio los vídeos en orden inverso. Recuérdese que el nivel 0 de respuesta se corresponde con "No sé / No contesto" (ver @tbl-likert-levels). Tras eliminar los test de los `r no_want_users` estudiantes que no dieron su consentimiento para participar en el estudio y los de los `r n_users -  n_distinct(df_all$Subject)` estudiantes que no realizaron el segundo test, las dos cohortes están equilibradas ya que hay `r (df_all %>% distinct(Seq, Subject) %>%   group_by(Seq) %>% count() %>% filter(Seq=="AB"))$n` estudiantes que realizaron el test con secuencia $AB$ y `r (df_all %>% distinct(Seq, Subject) %>%   group_by(Seq) %>% count() %>% filter(Seq=="BA"))$n` con secuencia $BA$.

```{r}
#| label: fig-groups
#| fig-cap: Estudiantes asignados a cada grupo.
#| fig-height: 2
#| eval: false

df_all %>%
    distinct(Seq, Subject) %>%
    group_by(Seq) %>%
    count() %>%
    ggplot(aes(x = Seq, y = n, fill = Seq)) +
    geom_bar(stat = "identity") +
    geom_text(aes(label = n, y = n / 2), size = 6) +
    geom_text(aes(label = Seq, y = -3), size = 6) +
    theme_void() +
    theme(
        legend.position = "none", plot.title = element_text(hjust = 0.6)
    )
```

### Análisis de la calidad de los datos

En esta sección se analiza si hay test que tienen valores de respuesta que puedan resultar anómalos. 
En los test no se ha observado ningún valor nulo ni erróneo.

```{r}
washout_cut_1 <- 300
washout_cut_2 <- 120
video_duration <- 43

# Calculamos el tiempo transcurrido entre la realización de los test
washout_periods_df <- test_all_df %>%
    dplyr::select(User, Test, Row, LastTry, Group) %>%
    pivot_wider(id_cols = c(User, Group), names_from = Test, values_from = c(Row, LastTry), names_prefix = "Test") %>%
    mutate(diff_sec = difftime(LastTry_Test02, LastTry_Test01, units = "secs")) %>%
    dplyr::select(Group, Row_Test01, Row_Test02, User, diff_sec)



```

El campo `LastTry` contiene la fecha y hora de realización del test. Con esta información se puede conocer el tiempo que transcurrió desde que un estudiante rellenó el primer test hasta que completó el segundo. Dado que los vídeos duran 43 segundos y hay 18 ítems, se puede estimar el tiempo medio que cada estudiante empleó en contestar cada ítem suponiendo que haya visto el segundo vídeo completo. La @tbl-washout muestra que hay algunos test en los que los estudiantes emplearon un tiempo muy breve en contestar
^[Hay que tener en cuenta que la duración de vídeo es de algo más de 40 segundos y que los estudiantes tienen que contestar un test de 18 ítems.].

```{r}
#| label: tbl-washout
#| tbl-cap: Tiempos de realización de la segunda actividad de duración inferior a 2 minutos.

washout_periods_df %>%
    filter(diff_sec < washout_cut_2) %>%
    mutate(Test = ifelse(Group == "A", "B", "A"), by_question = round((diff_sec - video_duration) / 18, 2)) %>%
    arrange(diff_sec) %>%
    dplyr::select(Subject = User, Test, "Spent time (secs)" = diff_sec, "Time by Item (secs)" = by_question) %>%
    gt()
```

```{r}
# Calculamos cuántas respuestas diferentes tiene cada test

n_questions <- sum(startsWith(colnames(test_all_df), "Q"))

test_lg_df <- test_all_df %>% pivot_longer(cols = all_of(starts_with("Q")), names_to = "Item", values_to = "Response")

distinct_response_df <- test_lg_df %>%
    group_by(Row, Test, Seq, User) %>%
    count(Response)



distinct_cut_1 <- 2
distinct_cut_2 <- 1


distinct_response__summary_df <- distinct_response_df %>%
    count() %>%
    ungroup() %>%
    dplyr::select(n) %>%
    group_by(n) %>%
    count() %>%
    ungroup()
```



La @fig-distinct muestra que hay `r (distinct_response__summary_df %>%
    filter(n == distinct_cut_1))$nn`
test en los que el estudiante contestó a todos los ítems usando únicamente `r distinct_cut_1` respuestas diferentes.
Además hay `r (distinct_response__summary_df %>%
    filter(n == distinct_cut_2))$nn` 
    test en los que se contestaron todos los ítems con `r distinct_cut_2` respuesta.

```{r}
#| label: fig-distinct
#| fig-cap: Número de respuestas diferentes en un mismo test.
#| warning: false

distinct_response__summary_df <- distinct_response_df %>%
    count() %>%
    ungroup() %>%
    dplyr::select(n) %>%
    group_by(n) %>%
    count()

distinct_response__summary_df %>%
    ggplot(aes(x = n, y = nn, fill = factor(n))) +
    geom_bar(stat = "identity") +
    theme_void() +
    theme(legend.position = "none", plot.title = element_text(hjust = 0.5), axis.title = element_text(size = 10), axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), angle = 90), axis.text.y = element_blank()) +
    geom_text(aes(label = n, y = 3), size = 7) +
    geom_text(aes(label = nn), nudge_y = 1.5, size = 5) +
    labs(y = "Total de test", x = "Respuestas diferentes por test")

```

La tabla @tbl-distinct2 muestra los test de respuesta única y el valor de esa respuesta. Se aprecia que la mayoría de estos test tienen valor de respuesta 4, la secuencia mayoritaria es la $BA$ y el test el $A$. El estudiante 4 responde ambos test utilizando el mismo valor de respuesta en todas los ítems.

```{r}
#| label: tbl-distinct2
#| tbl-cap: Test en los que todas los ítems se contestan el mismo valor de respuesta.

distinct_response_df %>%
    filter(n == n_questions) %>%
    arrange(Response, Seq, Test) %>%
    ungroup() %>%
    mutate(Test = ifelse(Seq == "AB", ifelse(Test == "01", "A", "B"), ifelse(Test == "01", "B", "A"))) %>%
    dplyr::select(Response, Seq, Test, "Subject" = User) %>%
    gt()
```

```{r}
# Calculamos cuántas respuestas diferentes hay entre los dos test para cada estudiante

compare_test_df <- test_lg_df %>%
    group_by(User, Item) %>%
    arrange(User, Item) %>%
    mutate(n = as.numeric(Response != lag(Response))) %>%
    arrange(User, Item) %>%
    filter(row_number() %% 2 == 0) %>%
    summarize(Total = sum(n)) %>%
    summarize(Total = sum(Total))

```

La @fig-compare presenta la distribución de la cantidad de respuestas cuyo valor cambia entre los dos test que realiza cada estudiante. La mayoría de los estudiantes cambian entre uno y otro test entre 11 y 17 respuestas. Tan solo `r compare_test_df %>% filter(Total == 0) %>% nrow()` estudiante respondió a todos los ítems con el mismo valor en los dos test. Por otro lado, no hay test que tengan un número excesivo de contestaciones "No sé/No contesto" (ver @tbl-noanswer).


```{r}
#| label: fig-compare
#| fig-cap: Número de respuestas diferentes entre los test para cada estudiante.

compare_test_df %>%
    count(Total) %>%
    mutate(Total = factor(Total, levels = 0:max(Total))) %>%
    ggplot(aes(x = Total, y = n, fill = Total)) +
    geom_bar(stat = "identity") +
    theme_void() +
    theme(legend.position = "none", plot.title = element_text(hjust = 0.5), axis.title = element_text(size = 10), axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), angle = 90), axis.text.y = element_blank()) +
    geom_text(aes(label = Total, y = 0.5), size = 6) +
    geom_text(aes(label = n), nudge_y = 0.5, size = 5) +
    labs(y = "Total de test", x = "Número de respuestas diferentes") +
    scale_x_discrete(drop = FALSE)
```


Tan solo `r compare_test_df %>% filter(Total == 0) %>% nrow()` estudiante respondió a todas los ítems con el mismo valor en los dos test. Por otro lado, no hay test que tengan un número excesivo de contestaciones "No sé/No contesto" (ver @tbl-noanswer).


```{r}
#| label: tbl-noanswer
#| tbl-cap: Los 5 test con más respuestas 'No sé / No contesto'
test_lg_df %>%
    mutate(Test = ifelse(Group == "A", ifelse(Test == "01", "A", "B"), ifelse(Test == "01", "B", "A"))) %>%
    filter(Response == 5) %>%
    group_by(Test, Row, User) %>%
    count() %>%
    arrange(desc(n)) %>%
    ungroup() %>%
    dplyr::select(Test, "Subject" = User, `Total answers by test` = n) %>%
    head(5) %>%
    gt()
```

Se constata que algunos test tienen valores que no parecen muy razonables. Por ejemplo, no parece razonable realizar la actividad en menos de `r washout_cut_2` segundos. Se observa que en algunos test hay poca variabilidad. Sin embargo, no son muchos los test con estas características así que se ha decidido mantener estos datos a pesar de que se pueda dudar de si en ellos los estudiantes contestaron con la debida atención y diligencia.

### Comparación de los subtítulos $A$ y $B$ entre grupos {#sec-eda-3}

La @fig-diff presenta una forma de comparar los dos test realizados por los estudiantes. Para cada estudiante se comparó ítem a ítem sus dos test y se contabilizó la diferencia entre el número de ítems en los que la puntuación en el segundo vídeo fue superior y en los que lo fue inferior (las que no variaron de puntuación no se consideraron). En el eje $x$ se muestran las diferencias entre respuestas. Cantidades negativas indican que hay más respuestas en el segundo de los test que han empeorado respecto al primero de las que han mejorado. En el eje $y$ se representa el número de estudiantes para cada diferencia. Esta frecuencia se representa en negativo cuando la diferencia en el eje x sea negativa para facilitar la comparación^[En la comparación se han omitido aquellas respuestas en las que el estudiante contestó "No sé / No contesto" en el ítem correspondiente de uno de los test.]. Esto es una forma de evaluar si el estudiante valoró mejor o no el segundo vídeo que el primero. 


```{r}
compare_test_user_df <- test_lg_df %>%
    group_by(Seq, User, Item) %>%
    arrange(User, Item, Test) %>%
    mutate(n = if_else(Response != 5 & lag(Response) != 5, sign(Response - lag(Response)), 0)) %>%
    arrange(User, Item, Test) %>%
    filter(row_number() %% 2 == 0) %>%
    summarize(Total = sum(n)) %>%
    summarize(Total = sum(Total))

compare_test_df <- compare_test_user_df %>%
    count(Total) %>%
    mutate(n = if_else(Total >= 0, n, -n))
```

```{r}
#| label: fig-diff
#| fig-cap: Diferencias en las respuestas entre test por estudiante y grupo.
#| fig-pos: h
#| fig-height: 8
#| fig-width: 12

compare_test_df %>% ggplot(aes(x = Total, y = n, fill = Total >= 0)) +
    geom_bar(stat = "identity") +
    scale_fill_manual(values = c("darkred", "darkblue")) +
    facet_wrap(~Seq, nrow = 2, scales = "free_y", labeller = function(variable, value) {
        paste0("Seq ", value)
    }) +
    theme(
        legend.position = "none",
        axis.title = element_text(size = 15),
        strip.text = element_text(size = 16), strip.background = element_blank(), panel.grid.minor = element_blank()
    ) +
    scale_y_continuous(
        breaks = -15:15
    ) +
    scale_x_continuous(
        breaks = -18:18
    ) +
    labs(y = "Cantidad de test (negativo cuando x sea negativo)", x = "Diferencias entre test de un estudiante (negativo cuando el segundo test es valorado peor)")
```

Se aprecia que en el grupo $AB$ las diferencias tienden a ser negativas y en el $BA$ positivas. Esto estaría indicando que los estudiantes valoran mejor el subtitulado de nivel $A$ en ambas secuencias. Por ello es esperable que las respuestas de los estudiantes del grupo $AB$ hayan empeorado y que las diferencias sean negativas y que lo contrario haya sucedido con las del grupo $BA$. La diferencia más frecuente en el grupo $AB$ es `r -((compare_test_df %>% arrange(n)) %>% head(1))$Total` y en el grupo $BA$ este valor es `r ((compare_test_df %>% arrange(n)) %>% tail(1))$Total`.
Resulta llamativo que haya estudiantes cuyas contestaciones estén tan alejadas de la tendencia de su grupo. En la @tbl-diff se muestran los tiempos que han transcurrido entre la realización de los test de aquellos estudiantes cuyas respuestas difieren de forma importante de su grupo. Son aquellos que aparecen en azul en la secuencia $AB$ y en rojo en la secuencia $BA$. Se observa que casi todos son tiempos entre actividades muy cortos. En cualquier caso y, como no son muchos, se ha decidido no eliminarlos y realizar el análisis con ellos.

```{r}
#| label: tbl-diff
#| tbl-cap: Estudiantes que tienen diferencias en sus respuestas muy alejadas de la tendencia de su grupo.
left_join(compare_test_user_df %>% filter(Seq == "AB" & Total >= 0 | Seq == "BA" & Total <= 0), test_all_df %>% dplyr::select(Row, User, Test, LastTry) %>%
    pivot_wider(names_from = Test, values_from = c(Row, LastTry))) %>%
    rename(Diff = Total) %>%
    arrange(desc(Diff), Seq, User) %>%
    filter(abs(Diff) >= 7) %>%
    mutate(Minutes = round(difftime(LastTry_02, LastTry_01, units = "mins"), 2)) %>%
    ungroup() %>%
    dplyr::select(Seq, "Subject" = User, Diff, Minutes) %>%
    gt()
```

```{r}
df_freqs <- df_all %>%
    group_by(Period, Seq, Treat) %>%
    count(Response) %>%
    mutate(freq = n / sum(n)) %>%
    ungroup()


df_freqs_treat <- df_all %>%
    group_by(Treat) %>%
    count(Response) %>%
    mutate(freq = n / sum(n)) %>%
    ungroup()

df_freqs_period <- df_all %>%
    group_by(Period) %>%
    count(Response) %>%
    mutate(freq = n / sum(n)) %>%
    ungroup()


df_freqs_seq <- df_all %>%
    group_by(Seq) %>%
    count(Response) %>%
    mutate(freq = n / sum(n)) %>%
    ungroup()


filter_in <- function(df, ...) {
    # Convertir los argumentos en una lista
    arg_list <- list(...)

    # Filtrar por cada columna y valor
    for (arg in names(arg_list)) {
        if (!is.null(arg_list[[arg]])) {
            df <- df[df[[arg]] %in% arg_list[[arg]], ]
        }
    }

    return(df)
}



format_freq <- function(freq) {
    paste(round(100 * freq, 0), "%", sep = "")
}

get_freqs <- function(df = df_freqs, ...) {
    format_freq(sum(filter_in(df, ...) %>% dplyr::select(freq)))
}
```




```{r}
df_resume <- df_all %>%
    dplyr::select(Subject, Period, Seq, Treat, Response, Item) %>%
    group_by(Seq, Period, Treat) %>%
    count(Response) %>%
    ungroup()

min_freq_response <- min(df_resume$n)
max_freq_response <- max(df_resume$n)
wine_red <- "#58181F"

```

```{r}
#| label: tbl-resume
#| tbl-cap: Resumen de frecuencias de respuesta.
df_resume %>%
    pivot_wider(id_cols = c(Seq, Period, Treat), names_from = Response, values_from = n) %>%
    gt() %>%
    tab_spanner(columns = `1`:`5`, label = "Response") %>%
    data_color(
        columns = `1`:`5`,
        colors = scales::col_numeric(
            palette = c("white", wine_red), domain = c(min_freq_response, max_freq_response)
        )
    )
```


En la @tbl-resume se muestra la frecuencia absoluta del valor de respuesta para cada grupo y test en todas los ítems. Esta es otra forma de comparar los niveles de subtitulado. La @fig-freqs muestra la misma información gráficamente y con frecuencias relativas. En esta figura se pueden apreciar algunas cuestiones interesantes:

* El tratamiento (subtitulado) con nivel $A$ presenta claramente mayores valores de respuesta que el $B$ como ya se había visto (ver @fig-diff).

* En general los dos grupos muestran bastante acuerdo en el subtitulado en ambos niveles: En el nivel de tratamiento $A$ los dos grupos tienen una frecuencia relativa similar de respuestas positivas (valores 4 y 5). El grupo $AB$ tiene un `r get_freqs(Seq="AB", Treat="A", Response=c(4,5))` de respuestas positivas y el grupo $BA$ `r get_freqs(Seq="BA", Treat="A", Response=c(4,5))`. No obstante, el grupo $AB$ tiene más respuestas con valor 5 que el grupo $BA$ (`r get_freqs(Seq="AB", Treat="A", Response=5)` frente a `r get_freqs(Seq="BA", Treat="A", Response=5)`). La valoración es también similar entre grupos en el nivel de tratamiento $B$: el grupo $AB$ tiene `r get_freqs(Seq="AB", Treat="B", Response=c(4,5))` de respuestas positivas y `r get_freqs(Seq="BA", Treat="B", Response=c(4,5))` el grupo $BA$. Las valoraciones negativas (1, 2), la neutra (3) y la 'No sé / No contesto' (0) son también muy similares en ambos grupos.

```{r}
#| label: fig-freqs
#| fig-cap: Frecuencias relativas de las respuestas al test.
#| fig-height: 6
#| fig-pos: h

level_labeller <- function(variable, value) {
    paste0(variable, " ", value)
}


df_freqs %>%
    ggplot(aes(
        x = Response, y = freq,
        fill = Response
    )) +
    geom_bar(stat = "identity") +
    facet_wrap(~ Seq + Period + Treat, nrow = 2, labeller = level_labeller) +
    geom_text(aes(label = Response, y = 0.9), size = 5) +
    geom_text(aes(label = formatC(freq, digits = 2, format = "f")), nudge_y = 0.1, size = 4) +
    ylim(0, 1) +
    theme(
        legend.position = "none",
        axis.line.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x = element_blank(),
        strip.text = element_text(size = 16), strip.background = element_blank()
    ) +
    labs(y = "Frecuencia relativa de respuesta", x = "Valor de la respuesta")
```

El análisis marginalizado de tratamiento, secuencia y periodo tiene estos resultados referidos a los ítems con contestación positiva (4, 5):

* El tratamiento $A$ tiene un `r get_freqs(df_freqs_treat, Treat="A", Response=c(4,5))` marginalizado de respuestas positivas frente al `r get_freqs(df_freqs_treat, Treat="B", Response=c(4,5))` del tratamiento $B$.

* El periodo 1 tiene un `r get_freqs(df_freqs_period, Period=1, Response=c(4,5))` marginalizado de respuestas positivas frente al `r get_freqs(df_freqs_period, Period=2, Response=c(4,5))` del periodo 2.

* Finalmente, la secuencia $AB$ tiene un `r get_freqs(df_freqs_seq, Seq="AB", Response=c(4,5))`
de respuestas positivas frente `r get_freqs(df_freqs_seq, Seq="BA", Response=c(4,5))` de la secuencia $BA$.


### Análisis de los ítems

```{r}
likert_df <- df_clean %>% pivot_wider(names_from = Item, values_from = Response_l, id_cols = c(Seq, Period, Subject, Treat))
```

El gráfico @fig-levels muestra la frecuencia relativa por grupo y por test de los ítems clasificados por niveles de respuesta, considerando que:

 * Los niveles 1 y 2 se consideran valoraciones negativas.
 * El nivel 3 se considera neutro.
 * Los niveles 4 y 5 se consideran positivos.
 * El nivel 0 ("No sé / No contesto") se excluye en este análisis.

Se muestra en primer lugar el ítem 18 por ser una valoración global del subtitulado y que resume la opinión que sobre el mismo tiene el estudiante. Se vuelve a constatar que el subtitulado $A$ es mejor valorado por los estudiantes, pero ahora se confirma que en los 18 ítems ambos grupos tienen más puntuaciones positivas y menos negativas en el subtitulado $A$ que en el $B$. También se vuelve a constatar que los dos grupos valoran de forma muy similar los dos niveles de subtitulado en todos los ítems. En el nivel de subtitulado $A$ los ítems $Q15$, $Q16$ y $Q17$ obtienen relativamente peores valoraciones (consultar la @tbl-likert-scale para ver el texto de los ítems) y estas son similares en ambos subtitulados. Hay algunos ítems que son valoradas de forma positiva incluso en el nivel de subtitulado $B$ (por ejemplo $Q04$ o $Q13$). Por último, los ítems $Q05$ y $Q09$ (también la $Q14$ pero solo para el grupo $BA$) tienen una valoración muy negativa en el nivel de subtitulado $B$.

```{r}
#| label: fig-levels
#| out-width: \\widthw
#| fig-height: 6
#| fig-cap: Frecuencias relativas de las respuestas por ítem.

df_clean %>%
    group_by(Seq, Treat, Item, Level) %>%
    mutate(Item = factor(Item, levels = rev(levels(Item)))) %>%
    count(Response) %>%
    ggplot(aes(x = Item, y = n, fill = Level)) +
    geom_bar(position = "fill", stat = "identity") +
    scale_y_continuous(labels = scales::percent, expand = c(0, 0)) +
    scale_fill_brewer(name = "Level:", type = "div", palette = "Spectral") +
    ylab("Percentage") +
    theme_bw() +
    theme(legend.position = "top", axis.text.y = element_text(size = 7)) +
    facet_grid(rows = vars(Seq), cols = vars(Treat)) +
    coord_flip() +
    labs(x = "Item", y = "Percentage", fill = "Response")
```

```{r}
#| eval: false
#| include: false
#| label: fig-likert
#| layout-ncol: 2
#| fig-height: 10
#| fig-cap: Ítems ordenadas por valoración.
#| fig-subcap:
#|   - "Seq AB , Treat A"
#|   - "Seq AB , Treat B"
#|   - "Seq BA , Treat A"
#|   - "Seq BA , Treat B"
likert_df %>%
    filter(Seq == "AB" & Treat == "A") %>%
    dplyr::select(-c(Subject, Treat, Period, Seq)) %>%
    data.frame() %>%
    likert() %>%
    plot()

likert_df %>%
    filter(Seq == "AB" & Treat == "B") %>%
    dplyr::select(-c(Subject, Treat, Period, Seq)) %>%
    data.frame() %>%
    likert() %>%
    plot()
likert_df %>%
    filter(Seq == "BA" & Treat == "A") %>%
    dplyr::select(-c(Subject, Treat, Period, Seq)) %>%
    data.frame() %>%
    likert() %>%
    plot()

likert_df %>%
    filter(Seq == "BA" & Treat == "B") %>%
    dplyr::select(-c(Subject, Treat, Period, Seq)) %>%
    data.frame() %>%
    likert() %>%
    plot()
```

En la @tbl-no-response se muestran las contastaciones "No sé / No contesto" por subtitulado e ítem. Se observa que hay relativamente pocas contestaciones "No śe / No contesto" y que éstas se concentran en los ítems $Q14$, $Q15$, $Q16$ y $Q17$. 

\tiny
```{r}
#| label: tbl-no-response
#| tbl-cap: Contestaciones "No sé / No contesto" por nivel de subtitulado e ítem
df_all %>%
    filter(Response == 0) %>%
    group_by(Treat, Item, .drop = F) %>%
    count() %>%
    arrange(Treat, Item) %>%
    pivot_wider(id_cols = c(Treat), names_from = c(Item), values_from = c(n)) %>%
    gt()
```
\normalsize

{{< include 4.1.qmd >}}