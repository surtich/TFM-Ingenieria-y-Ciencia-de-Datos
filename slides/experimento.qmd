---
title: "Materiales y Métodos"
author: "Javier Pérez Arteaga"
institute: "Máster en Ingeniería y Ciencia de Datos"
format:
    revealjs:
        logo: images/logo.png
        output-file: experimento.html
        slide-number: true
        multiplex: true
        theme: [simple, assets/monash.scss]
        show-slide-number: all
        controls: true
        width: 1920
        height: 1080
        css: [assets/custom.css, assets/pacman.css, assets/tachyons-addon.css]
        include-after: |
            <link rel="stylesheet" href="assets/syntax-highlight.css">
            <link rel="stylesheet" href="/assets/fontawesome-free-6.1.1-web/css/font-awesome.min.css">
            <script defer src="/assets/fontawesome-free-6.1.1-web/js/all.min.js"></script>
lang: es
execute:
  echo: false
---

```{r}
setwd("/home/surtich/projects/TFMQ")
source("_setup.R")

rotating_text <- function(x, align = "center") {
    glue::glue('
<div style="overflow: hidden; height: 1.2em;">
<ul class="content__container__list {align}" style="text-align: {align}">
<li class="content__container__list__item">{x[1]}</li>
<li class="content__container__list__item">{x[2]}</li>
<li class="content__container__list__item">{x[3]}</li>
<li class="content__container__list__item">{x[4]}</li>
</ul>
</div>')
}
```

## Objetivo del experimento


::: {.callout-note}
## Pregunta de investigación

¿Son los estudiantes de un curso de creación de materiales accesibles capaces de encontrar diferencias en la calidad del subtitulado de un vídeo?


:::


## Características del diseño del experimento {auto-animate=true}



:::::: {.columns}

:::::: {.column width="40%"}

::: incremental 

* Completamente aleatorizado.
* Cruzado AB/BA.
* Medidas repetidas.
* Doble ciego.
* De respuesta ordinal.

:::
:::

:::::: {.column width="60%"}

::: {.r-stack}


::: {data-id="video"}

::: {.fragment .fade-in}

![](images/video.png) 
:::

:::

::: {.fragment .fade-in}

::: {data-id="box-questions"}

::: box  
[Items de la escala de Likert]{.story}
<br>

```{r}
questions.tbl <- tibble(Item = levels(df_all$Item), Texto = levels(df_all$Item_l)) %>%
    arrange(Item) %>%
    gt() %>%
    tab_style(
        style = list(
            cell_fill(color = "#cfe0e3")
        ),
        locations = cells_body(
            rows = 18
        )
    ) %>%
    tab_options(
        table.background.color = "#E6E6E6",
        table.font.size = 20
    )
questions.tbl
```
:::
:::
:::
::: {.fragment .fade-in}


::: {data-id="box-response"}

::: box  
[Niveles de los items de la escala de Likert]{.story}
<br>
```{r}
response.tbl <- data.frame(`Valor` = 0:5, `Texto` = response_labels) %>%
    gt() %>%
    tab_style(
        style = list(
            cell_fill(color = "#cfe0e3")
        ),
        locations = cells_body(
            rows = 1
        )
    ) %>%
    tab_options(
        table.background.color = "#E6E6E6",
        table.font.size = 30
    ) %>%
    rm_header()
response.tbl
```
:::

:::

:::


:::
:::
:::

## Variables de interés {auto-animate=true}


:::::: {.columns}

:::::: {.column width="30%"}

::: {data-id="box-response"}

[Response]{.f1}

::: box  
```{r}
response.tbl %>%
    tab_options(
        table.background.color = "#E6E6E6",
        table.font.size = 20
    )
```
:::

:::


::: {.fragment .fade-in fragment-index=5}
::: {data-id="box-questions"}

[Item]{.f1}

::: box  
```{r}
questions.tbl
```
:::
:::
:::

::::::

:::::: {.column width="35%"}

::: {data-id="video"}

[Treat]{.f1}

[¿$A$? ¿$B$?]{.f1}
![](images/video.png) 

[¿$A$? ¿$B$?]{.f1}
![](images/video2.png) 
:::

::::::
:::::: {.column width="35%"}

::: {.fragment .fade-in fragment-index=1}
[Period 1 vs. Period 2]{.f1}

::: box  
[Efecto periodo]{.story}
<br>
Efecto que se produce cuando las respuestas en el segundo periodo están influidas por haber realizado previamente el mismo test. 

:::

:::


::: {.fragment .fade-in fragment-index=2}
[Seq AB vs. Seq BA]{.f1}

::: box  
[Efecto secuencia]{.story}
<br>
Efecto que se produce cuando las respuestas en el segundo periodo son diferentes en función de si previamente se realizó el test $A$ o el test $B$. 

:::

::: {.fragment .fade-in fragment-index=3}

["No test of treatment difference is possible without assuming the
carryover effects are equal."]{.speech .monash-blue2}
<span>John Lawson</span>


:::

::: {.fragment .fade-in fragment-index=4}
[Subject]{.f1}
<br>
Estudiantes participantes en el estudio. 

:::

:::

::::::
::::::

## Herramientas

* ![Quarto](images/quarto.png){width=2in}: herramienta de publicación de documentación científica en <i class="fa-brands fa-r-project"></i>, $\LaTeX$, <i class="fa-brands fa-markdown"></i> Markdown, ...
* <i class="fa-brands fa-r-project"></i> lenguaje de programación estadístico:
    * Manipulación de datos: tidyr, dplyr, ...
    * Gráficos: ggplot2, pyplot
    * Tablas: knitr, gt
    * Modelado estadístico: lme4, stats, ordinal, vcd, VGAM, brms, stan, ...
* ![](images/vscode.png){width=40px} VScode: Entorno de desarrollo.
* <i class="fa-brands fa-github"></i> [memoiQ](https://github.com/EricMarcon/memoiQ): Plantilla memoria
* <i class="fa-brands fa-github"></i> [emitanaka](https://github.com/emitanaka/talks): Plantilla presentación
* Tanto la memoria como la presentación son reproducibles.


## Exploración inicial

* Los estudiantes eligen participar o no voluntariamente en el estudio.
* Los datos se suministran anonimizados.
* Algunos de los estudiantes que realizaron la actividad de subtitulado no dieron su consentimiento para participar en el estudio y se han eliminado.
* Algunos de los estudiantes solo realizaron la primera actividad de subtitulado y también se han eliminado.

```{r}
#| fig-align: center
df_all %>%
    distinct(Seq, Subject) %>%
    group_by(Seq) %>%
    count() %>%
    ggplot(aes(x = Seq, y = n, fill = Seq)) +
    geom_bar(stat = "identity") +
    geom_text(aes(label = n, y = n / 2), size = 16) +
    geom_text(aes(label = Seq, y = -3), size = 16) +
    theme_void() +
    theme(
        legend.position = "none", plot.title = element_text(hjust = 0.6)
    )
```


## Exploración inicial

* El subtitulado denominado como $A$, muestra claramente mejores puntuaciones.
* El comportamiento por grupos (secuencias) y periodos es similar con sutiles diferencias.

```{r}
#| fig-align: center
#| out-width: 150%
df_freqs <- df_all %>%
    group_by(Period, Seq, Treat) %>%
    count(Response) %>%
    mutate(freq = n / sum(n)) %>%
    ungroup()

level_labeller <- function(variable, value) {
    paste0(variable, " ", value)
}


df_freqs %>%
    ggplot(aes(
        x = Response, y = freq,
        fill = Response
    )) +
    geom_bar(stat = "identity") +
    facet_wrap(~ Seq + Period + Treat, nrow = 2, labeller = level_labeller) +
    geom_text(aes(label = Response, y = 0.9), size = 5) +
    geom_text(aes(label = formatC(freq, digits = 2, format = "f")), nudge_y = 0.1, size = 4) +
    ylim(0, 1) +
    theme(
        legend.position = "none",
        axis.line.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x = element_blank(),
        strip.text = element_text(size = 16), strip.background = element_blank()
    ) +
    labs(y = "Frecuencia relativa de respuesta", x = "Valor de la respuesta")
```


## Exploración inicial

* En el subtitulado $A$ hay mayor homogeneidad entre grupos que en el $B$.
* En el subtitulado $A$, los ítems $Q15$, $Q16$, $Q17$, tienen relativamente peores valoraciones.
* En el subtitulado $B$, las peores valoraciones corresponden a los ítems $Q05$ y $Q09$.

```{r}
#| fig-align: center
#| out-width: 80%
df_response %>%
    group_by(Seq, Treat, Item, Level) %>%
    mutate(Item = factor(Item, levels = rev(levels(Item)))) %>%
    count(Response) %>%
    ggplot(aes(x = Item, y = n, fill = Level)) +
    geom_bar(position = "fill", stat = "identity") +
    scale_y_continuous(labels = scales::percent, expand = c(0, 0)) +
    scale_fill_brewer(name = "Level:", type = "div", palette = "Spectral") +
    ylab("Percentage") +
    theme_bw() +
    theme(legend.position = "top", axis.text.y = element_text(size = 7)) +
    facet_grid(rows = vars(Seq), cols = vars(Treat)) +
    coord_flip() +
    labs(x = "Item", y = "Percentage", fill = "Response")
```

## Modelado estadístico

```{r}
po.check <- function(x) {
    return(df_response %>% group_by(.data[[x]], Response) %>% count() %>% ungroup(Response) %>% mutate(cum.sum = cumsum(n), log.odds = qlogis(cum.sum / last(cum.sum)), diff.log.odds = log.odds - lead(x = log.odds, n = 1), odds = cum.sum / (last(cum.sum) - cum.sum), ratio.odds = odds / lead(odds)) %>% arrange(Response) %>% filter(Response %in% 1:3) %>% mutate(Predictor = x) %>% rename_with(~"Value", x))
}


bind_rows(po.check("Item"), po.check("Period"), po.check("Seq"), po.check("Treat")) %>%
    mutate(Response = recode_factor(Response, "1" = "1|2", "2" = "2|3", "3" = "3|4")) %>%
    ggplot(aes(
        x = diff.log.odds, y = Value,
        shape = Predictor, color = Predictor
    )) +
    geom_point(size = 3) +
    facet_grid(
        cols = vars(Response), rows = vars(Predictor), scales = "free_y",
        space = "free", switch = "both"
    ) +
    theme(panel.spacing.y = unit(0.2, "lines"))
```


## Modelado estadístico

    ```{r}
    modelsummary(list(`Response ~ 1` = clm(Response ~ 1, data = df_response), `Response ~ Treat` = clm(Response ~ Treat, data = df_response)), estimate = "{estimate}{stars}", gof_omit = "RMSE", statistic = c("std.error", "conf.int"), shape = term:contrast ~ model + statistic, output = "kableExtra", metrics = "Log.Lik.")
    ```
