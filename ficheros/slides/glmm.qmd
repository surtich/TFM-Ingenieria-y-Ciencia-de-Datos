## GLMM {visibility="uncounted" data-hide-slide-number="true"}

::: {.notes}
pag 15 y 16

Modelos Generalizados Multinivel, jerárquicos o mixtos.

La variable respuesta además de no ser normal, los valores no son independientes unos de otros.

En nuestro caso medidas repetidas (dependencia en el sujeto) y además preguntas no independientes (dependencia en los 
ítems).
Parte fija, parte aleatoria.

Parámetros en color.

No interesan los coeficientes de efectos aleatorios.

Complete pooling -> Sólo efectos fijos.

No pooling -> estimar indepedientemente los coeficientes de cada sujeto

Partial pooling: Compromiso, regresión a la media.
:::


$$
\begin{aligned}
Nivel\ 1: & y_{ij}     & = & \beta_{0j} + \beta_{1j}x_{1ij} + \epsilon_{ij} \\
Nivel\ 2: & \beta_{0j} & = & \color{blue}{\beta_{0}} + U_{0j} & (intercepto\ aleatorio) \\
          & \beta_{1j} & = & \color{blue}{\beta_{1}} + U_{1j} & (pendiente\ aleatoria) \\
\end{aligned}
$$

$$
\begin{aligned}
\text{Error intra grupo: } &  \epsilon_{ij} \sim N(0, \color{blue}{\sigma^2}) \\
\text{Error entre grupos: } &
\begin{pmatrix}
     U_{0j} \\
     U_{1j} \\
\end{pmatrix} 
\sim
N
\begin{pmatrix}
\begin{pmatrix}
     0 \\
     0 \\
\end{pmatrix},
\begin{pmatrix}
     \color{red}{\tau_0^2} & \color{red}{\tau_0}\color{green}{\tau_1}\color{blue}{\rho_{01}} \\
     \color{red}{\tau_0}\color{green}{\tau_1}\color{blue}{\rho_{01}} &  \color{green}{\tau_1^2} \\
\end{pmatrix}
\end{pmatrix} 
\end{aligned}
$$

::: {.fragment .fade-in}

```{r}
#| fig-width: 20
library(lme4)
#> Loading required package: Matrix
library(dplyr)
library(tibble)
library(ggplot2)

# Convert to tibble for better printing. Convert factors to strings
sleepstudy <- sleepstudy %>%
    as_tibble() %>%
    mutate(Subject = as.character(Subject))

df_sleep <- bind_rows(
    sleepstudy,
    tibble(Reaction = c(286, 288), Days = 0:1, Subject = "374"),
    tibble(Reaction = 245, Days = 0, Subject = "373")
) %>% filter(Subject %in% c("308", "309", "374", "373", "330", "331", "335", "337", "349", "370"))

m <- lmer(Reaction ~ 1 + Days + (1 + Days | Subject), df_sleep)

# Make a dataframe with the fitted effects
df_partial_pooling <- coef(m)[["Subject"]] %>%
    rownames_to_column("Subject") %>%
    as_tibble() %>%
    rename(Intercept = `(Intercept)`, Slope_Days = Days) %>%
    add_column(Model = "Partial pooling")

m_pooled <- lm(Reaction ~ Days, df_sleep)

# Repeat the intercept and slope terms for each participant
df_pooled <- tibble(
    Model = "Complete pooling",
    Subject = unique(df_sleep$Subject),
    Intercept = coef(m_pooled)[1],
    Slope_Days = coef(m_pooled)[2]
)

df_no_pooling <- lmList(Reaction ~ Days | Subject, df_sleep) %>%
    coef() %>%
    # Subject IDs are stored as row-names. Make them an explicit column
    rownames_to_column("Subject") %>%
    rename(Intercept = `(Intercept)`, Slope_Days = Days) %>%
    add_column(Model = "No pooling") %>%
    # Remove the participant who only had one data-point
    filter(Subject != "373")

df_models <- bind_rows(df_pooled, df_no_pooling, df_partial_pooling) %>%
    left_join(df_sleep, by = "Subject")

p_model_comparison <- ggplot(df_models) +
    aes(x = Days, y = Reaction) +
    # Set the color mapping in this layer so the points don't get a color
    geom_abline(
        aes(intercept = Intercept, slope = Slope_Days, color = Model),
        size = .75
    ) +
    geom_point() +
    facet_wrap("Subject", nrow = 1) +
    scale_x_continuous(breaks = 0:4 * 2) +
    # Fix the color palette
    scale_color_brewer(palette = "Dark2") +
    theme(legend.position = "top", legend.justification = "left", legend.text = element_text(size = 20))

p_model_comparison
```

:::
